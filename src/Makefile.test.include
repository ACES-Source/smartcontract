bin_PROGRAMS += test_verge
TESTS += test_verge
TEST_SRCDIR = test
TEST_BINARY=test/test_verge$(EXEEXT)


JSON_TEST_FILES = \
  test/data/base58_encode_decode.json \
  test/data/base58_keys_invalid.json \
  test/data/base58_keys_valid.json \
  test/data/script_invalid.json \
  test/data/script_valid.json \
  test/data/tx_invalid.json \
  test/data/tx_valid.json 

#RAW_TEST_FILES = data/alertTests.raw

BUILT_SOURCES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)

#TODO: needs updating
#test/base58_tests.cpp
#test/key_tests.cpp
#test/miner_tests.cpp
#test/multisig_tests.cpp
#test/wallet_tests.cpp
#test/rpc_tests.cpp
#test/DoS_tests.cpp
#test/Checkpoints_tests.cpp
#test/script_tests.cpp
#test/transaction_tests.cpp


test_verge_SOURCES = \
					   test/test_verge.cpp \
					   test/uint160_tests.cpp \
					   test/uint256_tests.cpp \
					   test/sigopcount_tests.cpp \
					   test/netbase_tests.cpp \
					   test/mruset_tests.cpp \
					   test/getarg_tests.cpp \
					   test/bignum_tests.cpp \
					   test/base64_tests.cpp \
					   test/base32_tests.cpp \
					   test/allocator_tests.cpp \
					   test/script_P2SH_tests.cpp \
					   test/stealth_tests.cpp \
					   $(JSON_TEST_FILES) $(RAW_TEST_FILES)

if ENABLE_WALLET
test_verge_SOURCES += \
					   test/accounting_tests.cpp
endif


test_verge_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test $(TESTDEFS) $(EVENT_CFLAGS)
test_verge_LDADD =

if ENABLE_WALLET
test_verge_LDADD += $(LIBBITCOIN_WALLET)
endif

test_verge_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
					 $(LIBLEVELDB) $(LIBMEMENV)  \
					 $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)


if HAVE_SSE2
test_verge_LDADD += $(LIBBITCOIN_SSE2)
endif

test_verge_LDADD += $(TOR_LIBS) \
  $(LIBEVENT_LIBS) \
  $(LIBSECCOMP_LIBS) \
  $(LIBCAP_LIBS) \
  $(ZLIB_LIBS)

test_verge_LDADD  += $(BDB_LIBS) $(LIBEVENT_LDFLAGS) $(LIBSECCOMP_LDFLAGS) $(LIBCAP_LDFLAGS) \
					   $(ZLIB_LDFLAGS)
test_verge_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
test_verge_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

nodist_test_verge_SOURCES = $(BUILT_SOURCES)

$(BITCOIN_TESTS): $(BUILT_SOURCES)

CLEAN_VERGE_TEST = test/*.gcda test/*.gcno $(BUILT_SOURCES)

CLEANFILES += $(CLEAN_VERGE_TEST)

verge_test: $(TEST_BINARY)

verge_test_check: $(TEST_BINARY) FORCE
		$(MAKE) check-TESTS TESTS=$^

verge_test_clean : FORCE
		rm -f $(CLEAN_VERGE_TEST) $(test_test_verge_OBJECTS) $(TEST_BINARY)
	
%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"
